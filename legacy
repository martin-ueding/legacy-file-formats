#!/usr/bin/python
# -*- coding: utf-8 -*-

# Copyright (c) 2012 Martin Ueding <dev@martin-ueding.de>

"""
Finds files which might become unreadble in the future.

This is the main script.
"""

__docformat__ = "javadoc en"

import optparse
import os
import sys

from liblegacy import *

def main():
    parser = optparse.OptionParser(usage="%prog [paths...]", description="Checks for proprietary, rare or legacy file formats that do not have a PDF (or similarly standard) exported.")
    parser.add_option("--stat", dest="stat", action="store_true", default=False, help="Print file type summary. [default %default]")
    parser.add_option("--time", dest="time", action="store_true", default=False, help="Check that export is newer than other file. [default %default]")
    parser.add_option("--formats", dest="formats", action="store_true", default=False, help="Show known formats and exit.")
    parser.add_option("--rename", dest="rename", action="store_true", default=False, help="Rename file.pdf to file.old.pdf [default %default].")
    parser.add_option("-v", dest="verbose", action="store_true", default=False, help="Show renames (or would be renames). [default %default].")

    (options, args) = parser.parse_args()
    del parser

    if options.formats:
        show_formats()
        sys.exit(1)

    # If no directory was given on the command line, use the current working
    # directory.
    if len(args) == 0:
        args.append(".")

    counts = {}

    # Iterate through all given folders.
    for arg in args:
        if os.path.isdir(arg):
            os.path.walk(arg, checkfolder, (options, counts))

    # Print the summary if desired.
    if options.stat:
        print_summary(counts)


if __name__ == "__main__":
	main()
